var o=(t="",e={})=>{throw new Error(`[joystick${t?`.${t}`:""}] ${e.message||e.reason||e}`)};var m=t=>{try{return!!(t&&typeof t=="object"&&!Array.isArray(t))}catch(e){o("types.isObject",e)}};var a=(t={},e=[],c="")=>{try{if(t&&m(t)){let n=Object.keys(t);for(let s=0;s<n.length;s+=1){let i=n[s],p=t[i];if(i==="id"&&p!==c&&e.push(p),i==="children"){let r=t[i];for(let y=0;y<r?.length;y+=1){let d=r[y]||{};a(d,e)}}}}return e}catch(n){o("component.getChildIdsFromTree",n)}},h=a;var l=(t=[])=>{try{for(let e of t)e.element&&e.eventType&&e.eventListener&&e.element.removeEventListener(e.eventType,e.eventListener)}catch(e){o("component.events.removeListeners",e)}};var j=(t={},e={})=>{try{let c=h(t,[],e?.id),n=[e?.id,...c],s=window.joystick._internal.eventListeners.filter(r=>n?.includes(r.componentId));l(s);let i=s.map(({eventId:r})=>r),p=window.joystick._internal.eventListeners.filter(({eventId:r})=>!i.includes(r));window.joystick._internal.eventListeners=p}catch(c){o("component.events.detachFromDOM",c)}};export{j as default};
