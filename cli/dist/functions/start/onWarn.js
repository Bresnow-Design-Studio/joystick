"use strict";var e=require("fs"),l=require("chalk"),n=require("@babel/code-frame");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=o(e),r=o(l);const t=new RegExp(/{([^;]*)}/g),i=(e="",l={})=>{const o=c.default.readFileSync(e,"utf-8");return n.codeFrameColumns(o,{start:l})},a=(e={})=>{const l=e?.snippet?.split("\n");e.file&&(console.log("\n"),console.log(r.default.yellowBright(`Build Error in ${e?.file}:\n`))),l&&l.length>0&&l.forEach((l=>l.includes(`> ${e.line} |`)?console.log(`   ${r.default.red(l)}`):console.log(`   ${r.default.gray(l)}`))),e?.stack&&(console.log(r.default.magentaBright("\nStack Trace:\n")),console.log(`   ${((e="")=>e.replace(t,""))(e?.stack)}\n`)),process.loader.error("Build error. Fix the error above to continue building your app."),console.log("\n")},s=(e={},l="")=>{if(l&&"UNRESOLVED_IMPORT"===l){const l=e?.stack;return{file:null,snippet:null,stack:l,line:null,character:null}}if(l&&"PLUGIN_ERROR"===l){const l=e?.stack,n=Object.entries(e).reduce(((e,[l,n])=>(e[l]=n,e)),{}),o=i(e.id,{line:n?.loc?.line,column:n?.loc?.column});return{file:e.id,snippet:o,stack:l,line:n?.loc?.line,character:n?.loc?.column}}if(l&&"PARSE_ERROR"===l){const l=i(e.id,{line:e?.loc?.line,column:e?.loc?.column});return{file:e.id,snippet:l,stack:e?.parserError?.stack,line:e?.loc?.line,character:e?.loc?.column}}};module.exports=e=>{if("UNRESOLVED_IMPORT"===e.code&&e?.stack){const l=s(e,"UNRESOLVED_IMPORT");return a(l),l}if("PLUGIN_ERROR"===e.code&&e?.stack){const l=s(e,"PLUGIN_ERROR");return a(l),l}if("PARSE_ERROR"===e.code&&e?.stack){const l=s(e,"PARSE_ERROR");return a(l),l}};
