#!/usr/bin/env node --no-warnings
"use strict";var e=require("commander"),t=require("fs"),s=require("url"),r=require("path"),o=require("chalk"),n=require("child_process"),a=require("ps-node"),i=require("node-watch"),c=require("fs-extra"),l=require("@babel/code-frame"),u=require("acorn"),d=require("net"),p=require("util"),f=require("command-exists"),m=require("mongodb");function y(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function h(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(s){if("default"!==s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}})),t.default=e,Object.freeze(t)}var g=y(e),j=y(t),S=y(r),v=y(o),w=y(n),b=y(a),k=y(i),$=y(c),_=h(u),x=y(d),E=y(p),R=y(f);const P="development"===process.env.NODE_ENV?"--registry http://localhost:4873":"",O=s.fileURLToPath("undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.js",document.baseURI).href),T=r.dirname(O),I=(e="")=>{j.default.writeFileSync(`./${e}/package.json`,((e="")=>{const t={name:e,version:"1.0.0",description:"",main:"index.js",scripts:{start:"joystick start",test:'echo "Error: no test specified" && exit 1'},keywords:[],author:"",license:"ISC"};return JSON.stringify(t,null,2)})(e))};class N{constructor(e={}){this.message=e.defaultMessage,this.frame=0,this.frames=[v.default.yellowBright(">>-----"),v.default.yellowBright("->>----"),v.default.yellowBright("--\x3e>---"),v.default.yellowBright("---\x3e>--"),v.default.yellowBright("----\x3e>-"),v.default.yellowBright("-----\x3e>"),v.default.yellowBright("----<<-"),v.default.yellowBright("---<<--"),v.default.yellowBright("--<<---"),v.default.yellowBright("-<<----"),v.default.yellowBright("<<-----")],this.freezeFrames={stable:v.default.yellowBright("---\x3e---"),error:v.default.redBright("!!!")}}getFrame(){return this.frame===this.frames.length-1?(this.frame=0,this.frame):(this.frame+=1,this.frame)}start(e=""){e&&(this.message=e),this.interval=setInterval((()=>{const e=this.getFrame();process.stdout.cursorTo(0),process.stdout.write(`${this.frames[e]} ${this.message}`)}),80)}stop(){clearInterval(this.interval),process.stdout.cursorTo(0),process.stdout.clearLine(),this.message="",this.interval=null}text(e=""){process.stdout.clearLine(),e&&(this.message=e),this.interval||this.start()}pause(e="",t="stable"){process.stdout.clearLine(),e&&(this.message=e),clearInterval(this.interval),this.interval=null;const s=this.freezeFrames[t];process.stdout.cursorTo(0),process.stdout.write(`${s?`${s} `:""}${this.message}`)}stable(e=""){this.pause(e)}error(e=""){this.pause(e,"error")}}const B=s.fileURLToPath("undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.js",document.baseURI).href),D=r.dirname(B);function q(e,t=[]){const s=j.default.readdirSync(e).map((t=>r.join(e,t)));return t.push(...s),s.forEach((e=>{j.default.statSync(e).isDirectory()&&q(e,t)})),t}var F=()=>q("./").filter((e=>!["node_modules",".joystick"].some((t=>e.includes(t))))).filter((e=>!j.default.lstatSync(e).isDirectory())),M=[{path:"public"},{path:"index.html"},{path:"index.css"},{path:"package.json"},{path:"package-lock.json"},{path:"settings.development.json"},{path:"settings.staging.json"},{path:"settings.test.json"},{path:"settings.production.json"},{path:".html"}];const U=new RegExp(/{([^;]*)}/g),J=new RegExp(/export default [a-zA-Z0-9]+/g),L=(e="",t={})=>{const s=j.default.readFileSync(e,"utf-8");return l.codeFrameColumns(s,{start:t})},A=(e={})=>{const t=e?.snippet?.split("\n");e.file&&(console.log("\n"),console.log(v.default.yellowBright(`Build Error in ${e?.file}:\n`))),t&&t.length>0&&t.forEach((t=>t.includes(`> ${e.line} |`)?console.log(`   ${v.default.red(t)}`):console.log(`   ${v.default.gray(t)}`))),e?.stack&&(console.log(v.default.magentaBright("\nStack Trace:\n")),console.log(`   ${((e="")=>e.replace(U,""))(e?.stack)}\n`)),process.loader.error("Build error. Fix the error above to continue building your app."),console.log("\n")},C=(e={},t="")=>{if(t&&"UNRESOLVED_IMPORT"===t){const t=e?.stack;return{file:null,snippet:null,stack:t,line:null,character:null}}if(t&&"PLUGIN_ERROR"===t){const t=e?.stack,s=Object.entries(e).reduce(((e,[t,s])=>(e[t]=s,e)),{}),r=L(e.id,{line:s?.loc?.line,column:s?.loc?.column});return{file:e.id,snippet:r,stack:t,line:s?.loc?.line,character:s?.loc?.column}}if(t&&"PARSE_ERROR"===t){const t=L(e.id,{line:e?.loc?.line,column:e?.loc?.column});return{file:e.id,snippet:t,stack:e?.parserError?.stack,line:e?.loc?.line,character:e?.loc?.column}}};var V=e=>{if("UNRESOLVED_IMPORT"===e.code&&e?.stack){const t=C(e,"UNRESOLVED_IMPORT");return A(t),t}if("PLUGIN_ERROR"===e.code&&e?.stack){const t=C(e,"PLUGIN_ERROR");return A(t),t}if("PARSE_ERROR"===e.code&&e?.stack){const t=C(e,"PARSE_ERROR");return A(t),t}};var G=(e="",t="")=>{const s=(()=>{const e=".joystick/build/fileMap.json";if(j.default.existsSync(e)){const t=j.default.readFileSync(e,"utf-8");return t?JSON.parse(t):{}}return{}})(),r=((e={})=>{const{body:t}=e,s=t&&t.filter((({type:e})=>"ImportDeclaration"===e)),r=t&&t.filter((e=>{const t="VariableDeclaration"===(e&&e.type),s=(e&&e.declarations||[]).some((e=>{const t="VariableDeclarator"===e.type,s=e&&e.init&&e.init.callee&&e.init.callee.name;return t&&"require"===s}));return t&&s}));return{imports:s.map((e=>({path:e&&e.source&&e.source.value}))),requires:r.map((e=>{const t=e.declarations,s=t&&t[0];return{path:s&&s.init&&s.init.arguments&&s.init.arguments[0]&&s.init.arguments[0].value}}))}})(((e="")=>_.parse(e,{ecmaVersion:"latest",sourceType:"module"}))(t));s[e]=r,j.default.writeFileSync(".joystick/build/fileMap.json",JSON.stringify(s,null,2))},K=()=>({transform:(e,t)=>(!["node_modules",".joystick","?","commonjsHelpers.js"].some((e=>t.includes(e)))&&G(t,e),null)});const Y=s.fileURLToPath("undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.js",document.baseURI).href),z=r.dirname(Y),H=(()=>{const e=`${z.replace("/dist","/node_modules/rollup/dist/rollup.js")}`;return require(e)})(),Z=((e="umd")=>{const t=`${z.replace("/dist","/node_modules")}`;return{resolve:require(`${t}/@rollup/plugin-node-resolve`).default,commonjs:require(`${t}/@rollup/plugin-commonjs`),json:require(`${t}/@rollup/plugin-json`),terser:require(`${t}/rollup-plugin-terser`).terser}})();var Q=async(e=[])=>Promise.all(e.map((async e=>{if(M.some((t=>e.includes(t.path))))return new Promise((t=>{$.default.outputFileSync(`./.joystick/build/${e}`,$.default.readFileSync(e)),t()}));const t=((e="")=>{let t="umd";return["api/","index.server.js"].some((t=>e.includes(t)))&&(t="cjs"),t})(e);return((e="",t="umd")=>{const s={cjs:[Z.json(),K(),Z.commonjs({ignoreDynamicRequires:!0}),Z.resolve({preferBuiltins:!0}),..."development"!==process.env.NODE_ENV?[Z.terser()]:[]],umd:[Z.json(),{transform(e,t){if(["pages"].some((e=>t.includes(e)))){const s=e.match(J)||[],r=s&&s[0];if(!r)return console.log(" "),console.warn(v.default.yellowBright(`All components in the ui/pages directory must have an export default statement (e.g., export default MyPage). Please check the file at ${t}.`)),console.log(" "),null;const o=(r&&r.split(" ")||[]).pop();if(o)return{code:e.replace(`${r};`,`            \n            if (\n              typeof window !== 'undefined' &&\n              window.__joystick_ssr__ === true &&\n              !window.__joystick_layout_page__ &&\n              ui &&\n              ui.mount\n            ) {\n              ui.mount(${o}, window.__joystick_ssr_props__ || {}, document.getElementById('app'));\n            }\n            \n            export default ${o};\n              `)}}return null}},{transform(e,t){if(["layouts"].some((e=>t.includes(e)))){const s=e.match(J)||[],r=s&&s[0];if(!r)return console.log(" "),console.warn(v.default.yellowBright(`All components in the ui/layouts directory must have an export default statement (e.g., export default MyLayout). Please check the file at ${t}.`)),console.log(" "),null;const o=(r&&r.split(" ")||[]).pop();if(o)return{code:e.replace(`${r};`,`if (\n                typeof window !== 'undefined' &&\n                window.__joystick_ssr__ === true &&\n                window.__joystick_layout_page__ &&\n                ui &&\n                ui.mount\n              ) {\n                fetch(window.__joystick_layout_page_url__).then(async (response) => {\n                  const file = await response.text();\n                  const component = eval(file);\n                  ui.mount(${o}, Object.assign({ ...window.__joystick_ssr_props__ }, { page: window[window.__joystick_layout_page__].js }), document.getElementById('app'));\n                });\n              }\n            \n            export default ${o};\n              `)}}return null}},K(),Z.resolve(),Z.commonjs({ignoreDynamicRequires:!0}),..."development"!==process.env.NODE_ENV?[Z.terser()]:[]]};return H.rollup({external:["mongodb","crypto-extra","dayjs","bcrypt","chalk","nodemailer","html-to-text","juice"],input:e,onwarn:V,plugins:s[t]}).then((async s=>{if(s){const r=`.joystick/build/${e.replace("./","")}`;return j.default.existsSync(r)&&j.default.unlinkSync(r),await s.write({exports:"auto",file:`.joystick/build/${e.replace("./","")}`,name:e,format:t}),await s.close(),{success:!0,path:e}}return{success:!1,path:e}})).catch((t=>{const s=V(t);return{success:!1,path:e,error:s}}))})(e,t)})));var W=(e="")=>((e=[],t={})=>Object.entries(t).filter((([t,s])=>{const r=s&&s.imports&&s.imports.some((t=>e.some((e=>t.path.includes(e))))),o=s&&s.requires&&s.requires.some((t=>e.some((e=>t.path.includes(e)))));return r||o})).map((([e])=>e.replace(`${process.cwd()}/`,""))))(((e="")=>{const t=e.split("/"),s=[];return t.forEach(((e,r)=>{let o=`${e}`;t.slice(r+1,t.length).forEach((e=>{o=o+=`/${e}`,s.push(o),e.includes(".")&&s.push(o.split(".")[0])}))})),s.push(`./${t[0]}`),s.push(`./${t[0]}/index`),s.push(`./${t[0]}/index.js`),s})(e),(()=>{const e=".joystick/build/fileMap.json";if(j.default.existsSync(e)){const t=j.default.readFileSync(e,"utf-8");return t?JSON.parse(t):{}}return{}})());const X=E.default.promisify(w.default.exec),ee=async()=>{R.default.sync("mongod")||(process.loader.stop(),console.warn(`\n  ${v.default.red("MongoDB is not installed on this computer.")}\n\n  ${v.default.green("Download MongoDB at https://www.mongodb.com/try/download/community")}\n    After you've installed MongoDB, run joystick start again, or, remove MongoDB from your databases list in your settings.development.json file to skip startup.\n  `),process.exit(1));j.default.existsSync(".joystick/data/mongodb")||j.default.mkdirSync(".joystick/data/mongodb",{recursive:!0});try{const{stdout:e}=await X(`mongod --port ${parseInt(process.env.PORT,10)+1} --dbpath ./.joystick/data/mongodb --quiet --fork --logpath ./.joystick/data/mongodb/log`);return((e=null)=>{const t=e&&e.match(/forked process:+\s[0-9]+/gi),s=t&&t[0]&&t[0].replace("forked process: ","");return s&&parseInt(s,10)})(e)}catch(e){console.warn(e),process.exit(1)}};var te=async e=>{const t=((e={})=>{let t="mongodb://";return e&&(e.username||e.password)&&(t=`${t}${e.username||""}:${e.password||""}@`),e&&e.hosts&&Array.isArray(e.hosts)&&(t=`${t}${e.hosts.map((e=>`${e.hostname}:${e.port}`)).join(",")}`),e&&e.database&&(t=`${t}/${e.database}`),t})(e);try{return(await m.MongoClient.connect(t,{connectTimeoutMS:3e3,socketTimeoutMS:3e3,useNewUrlParser:!0,useUnifiedTopology:!0,ssl:!1})).close(),!0}catch(e){console.warn(v.default.yellowBright("\nFailed to connect to MongoDB. Please double-check connection settings and try again.")),process.exit(1)}},se=async(e="",t={})=>{if("mongodb"===e){process.loader.text("Starting MongoDB...");const e=t.connection&&Object.keys(t.connection).length>0;let s=null;e&&await te(t.connection),e||(s=await(async(e={})=>await ee())(t));const r={hosts:[{hostname:"127.0.0.1",port:parseInt(process.env.PORT,10)+1}],database:"app",username:"",password:""},o={pid:s,connection:e?t.connection:r,settings:t};process.databases=process.databases?{...process.databases,mongodb:o}:{mongodb:o}}return Promise.resolve()};const re=[{path:"./ui"},{path:"./lib"},{path:"./i18n"},{path:"./index.client.js"},{path:"./api"},{path:"./email"},{path:"./index.server.js"},...M],oe=(e=[])=>{process.loader.stop(),Object.entries(process.databases||{}).forEach((([e,t])=>{t?.pid&&b.default.kill(t.pid)})),e.forEach((e=>{b.default.kill(e)})),process.exit()},ne=()=>{const e=w.default.fork(S.default.resolve(`${__dirname}/functions/start/hmrServer.js`),[],{silent:!0});process.hmrProcess=e,(()=>{try{process.hmrProcess&&(process.hmrProcess.on("error",(e=>{console.log(e)})),process.hmrProcess.stdout.on("data",(e=>{console.log(e.toString())})),process.hmrProcess.stderr.on("data",(e=>{process.loader.stop(),console.log(v.default.redBright(e.toString()))})))}catch(e){throw new Error(`[dev.handleHMRProcessSTDIO] ${e.message}`)}})(),process.hmrProcess.on("message",(e=>{["server_closed"].includes(e)||process.loader.stable(e)}))},ae=()=>{const e=w.default.fork(S.default.resolve(".joystick/build/index.server.js"),["--no-warnings"],{silent:!0,env:{NODE_ENV:process.env.NODE_ENV,PORT:process.env.PORT,JOYSTICK_SETTINGS:process.env.JOYSTICK_SETTINGS,databases:JSON.stringify(process.databases)}});process.serverProcess=e,(()=>{try{process.serverProcess&&(process.serverProcess.on("error",(e=>{console.log(e)})),process.serverProcess.stdout.on("data",(e=>{const t=e.toString();t&&t.includes("App running at:")?process.loader.stable(t):console.log(t)})),process.serverProcess.stderr.on("data",(e=>{process.loader.stop(),console.log(v.default.redBright(e.toString()))})))}catch(e){throw new Error(`[dev.handleServerProcessSTDIO] ${e.message}`)}})(),process.serverProcess.on("message",(e=>{["server_closed"].includes(e)||process.loader.stable(e)}))},ie=()=>{if(process.serverProcess&&process.serverProcess.pid)return process.loader.text("Restarting app..."),b.default.kill(process.serverProcess.pid),ae();process.loader.text("Starting app..."),ae(),ne()},ce=async()=>{await(async(e,t)=>{const s=".joystick/build/fileMap.json";j.default.existsSync(".joystick/build")||j.default.mkdirSync(".joystick/build"),j.default.existsSync(s)&&j.default.unlinkSync(s),process.loader.text("Building app...");const r=F();[...await Q(r)].filter((e=>!!e)).map((({success:e})=>e)).includes(!1)||(ae(),ne())})(),re.forEach((({path:e})=>{j.default.existsSync(`./${e}`)&&k.default(e,{recursive:!0},(async function(e,t){if(process.loader.text("Rebuilding app..."),"update"===e&&j.default.existsSync(`./${t}`)&&j.default.lstatSync(`./${t}`).isDirectory()&&(j.default.mkdirSync(`./.joystick/build/${t}`),ie()),M.find((e=>e.path===t))){j.default.writeFileSync(`./.joystick/build/${t}`,j.default.readFileSync(t));const e=W(t),s=await Q([t]),r=await Q(e),o=[...s,...r].filter((e=>!!e)).map((({success:e})=>e)).includes(!1);if(process.serverProcess&&o&&process.serverProcess.send(JSON.stringify({error:"BUILD_ERROR",paths:[...s,...r].filter((({success:e})=>!e)).map((({path:e,error:t})=>({path:e,error:t})))})),!o)return await de(),ie()}if("update"===e){const e=W(t),s=await Q([t]),r=await Q(e),o=[...s,...r].filter((e=>!!e)).map((({success:e})=>e)).includes(!1);process.serverProcess&&o&&process.serverProcess.send(JSON.stringify({error:"BUILD_ERROR",paths:[...s,...r].filter((({success:e})=>!e)).map((({path:e,error:t})=>({path:e,error:t})))})),o||ie()}if("remove"!==e||j.default.existsSync(`./.joystick/build/${t}`)||ie(),"remove"===e&&j.default.existsSync(`./.joystick/build/${t}`)){const e=`./.joystick/build/${t}`,s=j.default.lstatSync(e);s.isDirectory()&&j.default.rmdirSync(e,{recursive:!0}),s.isFile()&&j.default.unlinkSync(e),ie()}}))}))},le=(e=[])=>{const t=e.filter((e=>{return!((t=e)&&"object"==typeof t&&!Array.isArray(t));var t})),s=e.filter((e=>!!e.users)),r=e.flatMap(((t,s)=>e.map(((e,r)=>s===r?null:e.provider===t.provider?t:void 0)))).filter((e=>!!e));return t&&t.length>0&&(console.log(v.default.red("Please ensure that each database in the config.databases array is an object. Correct the array and restart your app.")),process.exit(1)),s&&s.length>1&&(console.log(v.default.red("Please select a single database for your user accounts and restart your app.")),process.exit(1)),r&&r.length>1&&(console.log(v.default.red("Please only specify a database provider once. Remove any duplicates from your config.databases array and restart your app.")),process.exit(1)),!0},ue=async()=>{try{const e=!!process.env.JOYSTICK_SETTINGS,t=(e&&JSON.parse(process.env.JOYSTICK_SETTINGS))?.config?.databases||[];return t&&Array.isArray(t)&&t.length>0?(le(t),await Promise.all(t.map((e=>(async(e={})=>(e.provider&&"mongodb"===e.provider&&await se("mongodb",e),Promise.resolve()))(e)))),Promise.resolve()):Promise.resolve()}catch(e){console.warn(e)}},de=async()=>{const e=process.env.NODE_ENV,t=`${process.cwd()}/settings.${e}.json`;if(!j.default.existsSync(t))return console.warn(`A settings file could not be found for this environment. If you have settings for this environment (${e}), creating a settings.${e}.js at the root of your project and restart Joystick.`),void(process.env.JOYSTICK_SETTINGS={});const s=j.default.readFileSync(t,"utf-8"),r=((e="")=>{try{JSON.parse(e)}catch(e){return!1}return!0})(s)?s:"{}";return process.env.JOYSTICK_SETTINGS=r,r};g.default.description("Create and manage Joystick apps."),g.default.usage("command"),g.default.addHelpCommand(!1),g.default.helpOption("-h, --help","Learn how to use this command line interface (CLI)."),g.default.command("create <projectName>").description("Create a new Joystick app.").action((e=>{if(((e="")=>j.default.existsSync(`./${e}`))(e))throw new Error(`A folder with the name ${e} already exists. Please choose a different name and try again.`);((e="")=>{j.default.mkdirSync(`./${e}`)})(e),((e="")=>{j.default.mkdirSync(`./${e}/.joystick`),j.default.mkdirSync(`./${e}/.joystick/build`)})(e),I(e),((e,t=[])=>{t.forEach((t=>{j.default.mkdirSync(`./${e}/${t}`)}))})(e,["api","i18n","ui","ui/components","ui/components/quote","ui/pages","ui/pages/index","lib","public"]),((e,t=[])=>{t.forEach((({name:t,content:s})=>{j.default.writeFileSync(`./${e}/${t}`,s)}))})(e,[{name:"api/index.js",content:j.default.readFileSync(`${T}/functions/create/templates/api/index.js`,"utf-8")},{name:"i18n/en-US.js",content:j.default.readFileSync(`${T}/functions/create/templates/i18n/en-US.js`,"utf-8")},{name:"ui/components/quote/index.js",content:j.default.readFileSync(`${T}/functions/create/templates/ui/components/quote/index.js`,"utf-8")},{name:"ui/pages/index/index.js",content:j.default.readFileSync(`${T}/functions/create/templates/ui/pages/index/index.js`,"utf-8")},{name:"public/favicon.ico",content:j.default.readFileSync(`${T}/functions/create/templates/public/favicon.ico`)},{name:"public/apple-touch-icon-152x152.png",content:j.default.readFileSync(`${T}/functions/create/templates/public/apple-touch-icon-152x152.png`)},{name:"index.client.js",content:j.default.readFileSync(`${T}/functions/create/templates/index.client.js`,"utf-8")},{name:"settings-development.js",content:j.default.readFileSync(`${T}/functions/create/templates/settings.env.js`,"utf-8")},{name:"settings-staging.js",content:j.default.readFileSync(`${T}/functions/create/templates/settings.env.js`,"utf-8")},{name:"settings-production.js",content:j.default.readFileSync(`${T}/functions/create/templates/settings.env.js`,"utf-8")},{name:"index.html",content:j.default.readFileSync(`${T}/functions/create/templates/index.html`,"utf-8")},{name:"index.server.js",content:j.default.readFileSync(`${T}/functions/create/templates/index.server.js`,"utf-8")}]),n.execSync(`cd ./${e} && npm install --save @joystick.js/ui @joystick.js/node ${P}`),console.log(`\n    ${v.default.green("Project created! To get started, run:")}\n\n    cd ${e} && joystick start\n  `)})),g.default.command("build").description("Build an existing Joystick app.").action((()=>{console.log("");const e=new N({defaultMessage:"Building app..."});e.start("Building app...");const t=D.replace("/functions/build",""),s=`${D.replace("/dist","/node_modules/rollup/dist/bin/rollup")}`;n.exec(`${s} -c ${t}/lib/rollup.config.js`,((t,s)=>{t?console.log(t):(e.pause("App built to .joystick/build!"),console.log(""),console.log(s))}))})),g.default.command("start").description("Start an existing Joystick app.").option("-p, --port <port>","Run Joystick on a custom port.").option("-e, --environment <environment>","Set the process.env.NODE_ENV for Joystick.").action((async(e={})=>{process.loader=new N({defaultMessage:"Starting app..."});const t=e?.port?parseInt(e?.port):2600,s=j.default.existsSync(`${process.cwd()}/.joystick`),r=await(e=>new Promise(((t,s)=>{const r=x.default.createServer();r.once("error",(function(e){if("EADDRINUSE"!=e.code)return callback(e);t(!1)})).once("listening",(function(){r.once("close",(function(){t(!0)})).close()})).listen(e)})))(t);s?r?(process.env.NODE_ENV=e?.environment||"development",process.env.PORT=e?.port?parseInt(e?.port):2600,await de(),await ue(),ce(),((e=[])=>{process.on("SIGINT",(()=>oe(e))),process.on("SIGTERM",(()=>oe(e)))})([])):console.log(`Port ${t} is already in use. Free up that port or pass another port with joystick start --port <PORT>.`):console.log(v.default.yellowBright("This is not a Joystick project. A .joystick folder could not be found. Double-check you're in the right folder or create a new project with joystick create <project>"))})),g.default.parse(process.argv);
